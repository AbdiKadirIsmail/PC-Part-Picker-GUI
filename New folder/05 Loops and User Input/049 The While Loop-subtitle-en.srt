1
00:00:00,060 --> 00:00:06,089
While loops now. You already learnt about
for loops and we were able to execute

3
00:00:06,089 --> 00:00:11,429
the print statement multiple times using
a for loop. For loops are used much more

5
00:00:11,429 --> 00:00:15,839
often than while loops, but while loops
also have their area of application

7
00:00:15,839 --> 00:00:20,369
sometimes and in this lecture I'll write
a very very small program that will

9
00:00:20,369 --> 00:00:25,890
demonstrate the syntax of a while loop
so let's start. A while loop starts with

11
00:00:25,890 --> 00:00:31,679
the while keyword. Let's say we want to
write a program that will compare a

13
00:00:31,679 --> 00:00:37,190
password against the value that the user
enters

15
00:00:37,960 --> 00:00:42,360
and while the password
entered by the user is not the same with a

17
00:00:42,360 --> 00:00:48,030
password that we know, the loop will keep
occurring over and over again until the

19
00:00:48,030 --> 00:00:55,140
user enters the real, the correct password.
So while the password is different from

21
00:00:55,140 --> 00:01:01,290
let's say the real password is by Python123
and we need a column there and

23
00:01:01,290 --> 00:01:07,380
notice that these two symbols mean
is not and here we are comparing a variable

25
00:01:07,380 --> 00:01:13,590
to a value, but we don't have a variable
yet declared, so first we need to declare

27
00:01:13,590 --> 00:01:19,470
the variable here. The password equals to
an empty string so that's the initial

29
00:01:19,470 --> 00:01:25,590
value before the user enters their own
value and here we want to get the

31
00:01:25,590 --> 00:01:30,720
user value, and here we want to store the
value entered by the user in our

33
00:01:30,720 --> 00:01:39,990
password variable. So input enter
password. Now once we get the value in

35
00:01:39,990 --> 00:01:46,950
our password variable, we want to compare
that variable and we compare it against the

37
00:01:46,950 --> 00:01:54,000
real password, so python123, so if the
value entered by the user is equal to

39
00:01:54,000 --> 00:02:05,869
Python123 we want to print out the string
you are logged in, else so if this

41
00:02:05,869 --> 00:02:10,700
evaluates to false we would have another
action here.

43
00:02:10,700 --> 00:02:19,739
That would be, sorry
try again. That's it. Let's test this now

45
00:02:19,739 --> 00:02:25,590
before I go over the code again and
explain things better to you, so save.

47
00:02:25,590 --> 00:02:34,380
Then go to your command line. That's the script
number 6, so let's try our own password here.

49
00:02:34,380 --> 00:02:43,470
Let's say just python. Sorry try again.
Try again. Python 1. No. Python123.

51
00:02:43,470 --> 00:02:49,319
And you are logged in. So we are just
printing out some lines here some text,

53
00:02:49,319 --> 00:02:53,430
but in a real-life situation we would be
expecting a real user log ins.

55
00:02:53,430 --> 00:02:58,409
We would have to write some longer code
here that basically would show the user

57
00:02:58,409 --> 00:03:03,930
the internal pages of your website,
of your web application, so you would unlock

59
00:03:03,930 --> 00:03:09,450
your user content of your website.
So again what we have here? While password

61
00:03:09,450 --> 00:03:14,819
is not equal to one two three this block
of code will be executed over and over again.

63
00:03:14,819 --> 00:03:20,489
Once the value gets equal to
Python123, the loop stops

65
00:03:20,489 --> 00:03:24,930
running and so does the script, so I
believe this is a very nice explanation

67
00:03:24,930 --> 00:03:30,510
and example for you to understand the
while loop. Again you'll be using the for

69
00:03:30,510 --> 00:03:34,859
loop much more than the while loop but
this is good to know and it was also a

71
00:03:34,859 --> 00:03:39,799
good practice for you I believe.
See you in the next lecture.

